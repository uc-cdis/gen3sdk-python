# push will run on every pushed commit to any branch (so this will rerun the tests
# once a branch gets merged to main in addition to any new commits on any branch)
on: push

name: Build

jobs:
  pyinstaller:
    runs-on: ${{ matrix.os }}

    strategy:
      # fully attempt building in every OS
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    # Defining a Postgres DB service, mainly to get the required OS packages
    # so we can build and deal with `psycopg` from source (which pyinstaller
    # needs to do when building the binary)
    services:
      postgres:
        # Docker Hub image
        image: postgres:13
        env:
          # trust connections from other jobs in this workflow to access this service
          # this simplifies the networking to this service
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Additional Postgres service configuration
        # PostgreSQL 15 will revoke the CREATE permission from all users
        # except a database owner from the public (or default) schema.
        # This is required by some services for db setup for testing, so grant
        # that permission to the postgres user now to hopefully avoid headache
        # when we eventually upgrade to 15 (even though it's not technically required
        # in postgres 13).
        run: |
          echo "Versions"
          psql --version
          psql -U postgres -h localhost -d postgres -c 'SELECT version();'

          echo "Grant admin privileges to postgres user"
          psql -U postgres -h localhost -d postgres -c 'GRANT CREATE ON SCHEMA public TO postgres;'
        env:
            # The hostname used to communicate with the PostgreSQL service container
            POSTGRES_HOST: localhost
            POSTGRES_PORT: 5432

      - name: Check out code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # https://pyinstaller.org/en/stable/when-things-go-wrong.html#helping-pyinstaller-find-modules
      - name: Install poetry
        run: |
          pip install --upgrade pip
          pip --version
          # this isn't the recommended way to install b/c the poetry deps are now
          # mixed with the service deps. However, getting the alternative to work
          # on all OSes was getting difficult. This is a quick hack to move forward
          pip install poetry
          python -m poetry --version
          python -m poetry self add poetry-pyinstaller-plugin
      - name: Install dependencies and then build using pyinstaller
        run: |
          python -m poetry install -vv --all-extras --no-interaction --no-cache
          python -m poetry show -vv
          python -m poetry env info
          python -m poetry build
          # pip install pyinstaller==6.6.0
          # pyinstaller --paths=./gen3 --clean --name gen3 --hidden-import gen3users --onefile ./gen3/cli/__main__.py
          # pyinstaller --log-level=DEBUG --debug=imports --clean --name gen3 --hidden-import gen3users --onefile ./gen3/cli/__main__.py
      - name: Test build
        run: |
          cp -r ./dist/pyinstaller/*/gen3/gen3 ./gen3
          ./gen3 --help
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            dist
            !dist/**/*.md




